pipeline BatteryDataPipeline {

    // Pipeline declaration

    DataExtractor
        -> ZipArchiveInterpreter
        -> DataFilePicker
        -> TextFileInterpreter
        -> BatteryDataCSVInterpreter
        -> ExcessColumnDropper
        -> ExactColumnDropper
        -> HeaderRowDeleter
        -> BatteryDataTableInterpreter
        -> BatteryDataStorer;


    // ValueTypes

    valuetype IdentificationOfFixedObjectsInPublicTransport oftype text {
        constraints: [
            IFOPT_Format,
        ];
    }

    valuetype LaengeBreiteType oftype decimal {
	    constraints: [
		    GeographicCoordinate
	    ];
    }

    valuetype VerkehrType oftype text {
        constraints: [
            VerkehrAllowlist,
        ];
    }
    

    // Constraints

    constraint IFOPT_Format oftype RegexConstraint {
        regex: /^[a-z]{2}:\d+:\d+(:\d+)?(:\d+)?$/;
    }

    constraint GeographicCoordinate oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;     
        upperBoundInclusive: true; 
    }


    constraint VerkehrAllowlist oftype AllowlistConstraint {
        allowlist: [
            "FV", "RV", "nur DPN",
        ];
    }

    // Jayvee automatically invalidates rows that contain empty cells. Thats handy, could think of scenarios where that is undesirable though.

    // Blocks

	block DataExtractor oftype HttpExtractor {
		url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
	}

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block DataFilePicker oftype FilePicker {
        path: "/data.csv";
    }

	block TextFileInterpreter oftype TextFileInterpreter {}

	block BatteryDataCSVInterpreter oftype CSVInterpreter {
        delimiter: ';';
	}

	block ExcessColumnDropper oftype CellRangeSelector {
        select: range A1:K*;
	}

	block ExactColumnDropper oftype ColumnDeleter {
        delete: [column F, column G, column H, column I];
	}

    block HeaderRowDeleter oftype RowDeleter {
        delete: [row 1];
    }

	block BatteryDataTableInterpreter oftype TableInterpreter {
		header: false;
        columns : [
            "Geraet" oftype integer,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype integer,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype text,
        ];
	}

	block BatteryDataStorer oftype SQLiteLoader {
		table: "temperatures";
		file: "./temperatures.sqlite";
	}
}
