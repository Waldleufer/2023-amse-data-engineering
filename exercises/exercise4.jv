pipeline BatteryDataPipeline {

    // Pipeline declaration

    DataExtractor
        -> ZipArchiveInterpreter
        -> DataFilePicker
        -> TextFileInterpreter
        -> BatteryDataCSVInterpreter
        -> ExcessColumnDropper
        -> ExactColumnDropper
        -> HeaderRowDeleter
        -> BatteryDataTableInterpreter
        -> CelsiusToFahrenheitBatterytemperatureTransformer
        -> CelsiusToFahrenheitTemperatureTransformer
        -> BatteryDataStorer;


    // ValueTypes

    valuetype Month oftype decimal {
	    constraints: [
		    MonthConstraint
	    ];
    }

    valuetype GermanBoolean oftype text {
        constraints: [
            GeraetAktivAllowList,
        ];
    }
    

    // Constraints and Transforms

    constraint MonthConstraint oftype RangeConstraint {
        lowerBound: 1;
        lowerBoundInclusive: true;
        upperBound: 12;     
        upperBoundInclusive: true; 
    }

    constraint GeraetAktivAllowList oftype AllowlistConstraint {
        allowlist: [
            "Ja", "Nein"
        ];
    }

    transform CelsiusToFahrenheit {
        from tempCelsius oftype decimal;
        to tempFahrenheit oftype decimal;

        tempFahrenheit: ((tempCelsius * 9/5) + 32);
    }


    // Blocks

	block DataExtractor oftype HttpExtractor {
		url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
	}

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block DataFilePicker oftype FilePicker {
        path: "/data.csv";
    }

	block TextFileInterpreter oftype TextFileInterpreter {}

	block BatteryDataCSVInterpreter oftype CSVInterpreter {
        delimiter: ';';
	}

	block ExcessColumnDropper oftype CellRangeSelector {
        select: range A1:K*;
	}

	block ExactColumnDropper oftype ColumnDeleter {
        delete: [column F, column G, column H, column I];
	}

    block HeaderRowDeleter oftype RowDeleter {
        delete: [row 1];
    }

	block BatteryDataTableInterpreter oftype TableInterpreter {
		header: false;
        columns : [
            "Geraet" oftype integer,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype Month,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype GermanBoolean,
        ];
	}

    block CelsiusToFahrenheitBatterytemperatureTransformer oftype TableTransformer  {
        inputColumn : 'Batterietemperatur';
        outputColumn: 'Batterietemperatur';
        use: CelsiusToFahrenheit;
    }

    block CelsiusToFahrenheitTemperatureTransformer oftype TableTransformer  {
        inputColumn : 'Temperatur';
        outputColumn: 'Temperatur';
        use: CelsiusToFahrenheit;
    }

	block BatteryDataStorer oftype SQLiteLoader {
		table: "temperatures";
		file: "./temperatures.sqlite";
	}
}
